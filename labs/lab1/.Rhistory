=45*678
45*678
x=(7; 4; 2; 0; 9)
x=(7, 4, 2, 0, 9)
x(7, 4, 2, 0, 9)
c(2, 3, 5)
x(7, 4, 2, 0, 9)
remove(x)
remove('x')
x(7, 4, 2, 0, 9)
x(7,4,2,0,9)
x = c(7,4,2,0,9)
y = c(2; 1; 5; 3; 3)
y = c(2,1,5,3,3)
z=x*y
A = matrix(c(0,2,1),c(1,6,4),c(5,0,3))
A = matrix(c(0,2,1,1,6,4,5,0,3),nrow=3,ncol=2)
A = matrix(c(0,2,1,1,6,4,5,0,3),nrow=3,ncol=3)
B = matrix(c(9,8,7,1,2,7,4,9,2),nrow=3,ncol=3)
View(A)
C = A%*%B
45*678
45%*%678
sum(45,45)
sum(x,y)
sum(45,55)
View(A)
getwd()
dir
dir()
clear()
clear()
getwd()
setwd("H:\Dokumenty\ci\lab1")
setwd("H:\Dokumenty\ci\lab1")
setwd("H:\Dokumenty\ci\lab1")
getwd
getwd()
setwd("H:/Dokumenty/ci/lab1")
getwd()
osoby = read.csv("osoby.csv")
osoby
osoby
osoby[2]
mean(osoby[4])
osoby[4]
mean(osoby[4])
View(osoby)
zsum = x+y
mean(osoby[4])
osoby_mean = mean(osoby[4])
osoby_mean = mean(as.integer(osoby[4]))
osoby["imie"]
osoby_mean = mean((osoby["wiek"]))
osoby(1)
osoby(1)
osoby.1
osoby[1]
osoby[][1]
osoby[][][1]
osoby[1][1]
summary(osoby["wiek])
summary(osoby["wiek]))
summary(osoby["wiek"]))
summary(osoby["wiek"])
osoby_mean = mean(osoby["wiek"])
osoby_mean = mean(osoby["wiek"],trim=0)
osoby_mean = mean(osoby["wiek"],trim=1)
osoby[$2]
osoby[$]
osoby[2]
osoby["imie"]
osoby$imie
osoby_mean = mean(osoby$wiek)
osoby
subset(osoby, osoby$plec="k")
subset(osoby, grepl("k", osoby$plec))
summary(osoby["wiek"])
install.packages("genalg")
library(genalg)
install.packages("ggplot2")
library(ggplot2)
osoby_mean = mean(osoby$wiek)
#Lab1/Zad3
#b
dataset <- data.frame(
item = c("pocketknife", "beans", "potatoes", "unions",
"sleeping bag", "rope", "compass"),
survivalpoints = c(10, 20, 15, 2, 30, 10, 30),
weight = c(1, 5, 10, 1, 7, 5, 1))
weightlimit <- 20
#c
chromosome = c(1, 0, 0, 1, 1, 0, 0)
dataset[chromosome == 1, ]
cat(chromosome %*% dataset$survivalpoints)
#Lab1/Zad3
#b
dataset <- data.frame(
item = c("pocketknife", "beans", "potatoes", "unions",
"sleeping bag", "rope", "compass"),
survivalpoints = c(10, 20, 15, 2, 30, 10, 30),
weight = c(1, 5, 10, 1, 7, 5, 1))
weightlimit <- 20
#c
chromosome = c(1, 0, 0, 1, 1, 0, 0)
dataset[chromosome == 1, ]
cat(chromosome %*% dataset$survivalpoints)
#Lab1/Zad3
#b
dataset <- data.frame(
item = c("pocketknife", "beans", "potatoes", "unions",
"sleeping bag", "rope", "compass"),
survivalpoints = c(10, 20, 15, 2, 30, 10, 30),
weight = c(1, 5, 10, 1, 7, 5, 1))
weightlimit <- 20
#c
chromosome = c(1, 0, 0, 1, 1, 0, 0)
dataset[chromosome == 1, ]
cat(chromosome %*% dataset$survivalpoints)
#Lab1/Zad3
#b
dataset <- data.frame(
item = c("pocketknife", "beans", "potatoes", "unions",
"sleeping bag", "rope", "compass"),
survivalpoints = c(10, 20, 15, 2, 30, 10, 30),
weight = c(1, 5, 10, 1, 7, 5, 1))
weightlimit <- 20
#c
chromosome = c(1, 0, 0, 1, 1, 0, 0)
dataset[chromosome == 1, ]
cat(chromosome %*% dataset$survivalpoints)
#Lab1/Zad3
#b
dataset <- data.frame(
item = c("pocketknife", "beans", "potatoes", "unions",
"sleeping bag", "rope", "compass"),
survivalpoints = c(10, 20, 15, 2, 30, 10, 30),
weight = c(1, 5, 10, 1, 7, 5, 1))
weightlimit <- 20
#c
chromosome = c(1, 0, 0, 1, 1, 0, 0)
dataset[chromosome == 1, ]
cat(chromosome %*% dataset$survivalpoints)
#Lab1/Zad3
#b
dataset <- data.frame(
item = c("pocketknife", "beans", "potatoes", "unions",
"sleeping bag", "rope", "compass"),
survivalpoints = c(10, 20, 15, 2, 30, 10, 30),
weight = c(1, 5, 10, 1, 7, 5, 1))
weightlimit <- 20
#c
chromosome = c(1, 0, 0, 1, 1, 0, 0)
dataset[chromosome == 1, ]
cat(chromosome %*% dataset$survivalpoints)
#Lab1/Zad3
#b
dataset <- data.frame(
item = c("pocketknife", "beans", "potatoes", "unions",
"sleeping bag", "rope", "compass"),
survivalpoints = c(10, 20, 15, 2, 30, 10, 30),
weight = c(1, 5, 10, 1, 7, 5, 1))
weightlimit <- 20
#c
chromosome = c(1, 0, 0, 1, 1, 0, 0)
dataset[chromosome == 1, ]
cat(chromosome %*% dataset$survivalpoints)
#Lab1/Zad3
#b
dataset <- data.frame(
item = c("pocketknife", "beans", "potatoes", "unions",
"sleeping bag", "rope", "compass"),
survivalpoints = c(10, 20, 15, 2, 30, 10, 30),
weight = c(1, 5, 10, 1, 7, 5, 1))
weightlimit <- 20
#c
chromosome = c(1, 0, 0, 1, 1, 0, 0)
dataset[chromosome == 1, ]
cat(chromosome %*% dataset$survivalpoints)
#d
fitnessFunc <- function(x) {
current_solution_survivalpoints <- x %*% dataset$survivalpoints
current_solution_weight <- x %*% dataset$weight
if (current_solution_weight > weightlimit)
return(0) else return(-current_solution_survivalpoints)
}
#Lab1/Zad3
#b
dataset <- data.frame(
item = c("pocketknife", "beans", "potatoes", "unions",
"sleeping bag", "rope", "compass"),
survivalpoints = c(10, 20, 15, 2, 30, 10, 30),
weight = c(1, 5, 10, 1, 7, 5, 1))
weightlimit <- 20
#c
chromosome = c(1, 0, 0, 1, 1, 0, 0)
dataset[chromosome == 1, ]
cat(chromosome %*% dataset$survivalpoints)
#d
fitnessFunc <- function(x) {
current_solution_survivalpoints <- x %*% dataset$survivalpoints
current_solution_weight <- x %*% dataset$weight
if (current_solution_weight > weightlimit)
return(0) else return(-current_solution_survivalpoints)
}
#Lab1/Zad3
#b
dataset <- data.frame(
item = c("pocketknife", "beans", "potatoes", "unions",
"sleeping bag", "rope", "compass"),
survivalpoints = c(10, 20, 15, 2, 30, 10, 30),
weight = c(1, 5, 10, 1, 7, 5, 1))
weightlimit <- 20
#c
chromosome = c(1, 0, 0, 1, 1, 0, 0)
dataset[chromosome == 1, ]
cat(chromosome %*% dataset$survivalpoints)
#d
fitnessFunc <- function(x) {
current_solution_survivalpoints <- x %*% dataset$survivalpoints
current_solution_weight <- x %*% dataset$weight
if (current_solution_weight > weightlimit)
return(0) else return(-current_solution_survivalpoints)
}
#Lab1/Zad3
#b
dataset <- data.frame(
item = c("pocketknife", "beans", "potatoes", "unions",
"sleeping bag", "rope", "compass"),
survivalpoints = c(10, 20, 15, 2, 30, 10, 30),
weight = c(1, 5, 10, 1, 7, 5, 1))
weightlimit <- 20
#c
chromosome = c(1, 0, 0, 1, 1, 0, 0)
dataset[chromosome == 1, ]
cat(chromosome %*% dataset$survivalpoints)
#d
fitnessFunc <- function(x) {
current_solution_survivalpoints <- x %*% dataset$survivalpoints
current_solution_weight <- x %*% dataset$weight
if (current_solution_weight > weightlimit)
return(0) else return(-current_solution_survivalpoints)
}
#e
GAmodel <- rbga.bin(size = 7, popSize = 200, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
summary(GAmodel, echo=TRUE)
#f
iter<-100
animate_plot <- function() {
for (i in seq(1, iter)) {
temp <- data.frame(Iteracja = c(seq(1, i), seq(1, i)), Legenda = c(rep("Średnia",
i), rep("Najlepsza", i)), WartoscFitness = c(-GAmodel$mean[1:i], -GAmodel$best[1:i]))
pl <- ggplot(temp, aes(x = Iteracja, y = WartoscFitness, group = Legenda,
colour = Legenda)) + geom_line() + scale_x_continuous(limits = c(0,
iter)) + scale_y_continuous(limits = c(0, 110)) + geom_hline(y = yintercept = 1,
max(temp$WartoscFitness),
lty = 2) + annotate("text", x = 1, y = max(temp$WartoscFitness) +
2, hjust = 0, size = 3, color = "black", label = paste("Najlepsze rozwiązanie:",
max(temp$WartoscFitness))) + scale_colour_brewer(palette = "Set1")
print(pl)
}
}
pl <- ggplot(temp, aes(x = Iteracja, y = WartoscFitness, group = Legenda,
colour = Legenda)) + geom_line() + scale_x_continuous(limits = c(0,
iter)) + scale_y_continuous(limits = c(0, 110)) + geom_hline(y =
max(temp$WartoscFitness),
lty = 2) + annotate("text", x = 1, y = max(temp$WartoscFitness) +
2, hjust = 0, size = 3, color = "black", label = paste("Najlepsze rozwiązanie:",
max(temp$WartoscFitness))) + scale_colour_brewer(palette = "Set1")
iter<-100
#Lab1/Zad3
#b
dataset <- data.frame(
item = c("pocketknife", "beans", "potatoes", "unions",
"sleeping bag", "rope", "compass"),
survivalpoints = c(10, 20, 15, 2, 30, 10, 30),
weight = c(1, 5, 10, 1, 7, 5, 1))
weightlimit <- 20
#c
chromosome = c(1, 0, 0, 1, 1, 0, 0)
dataset[chromosome == 1, ]
cat(chromosome %*% dataset$survivalpoints)
#d
fitnessFunc <- function(x) {
current_solution_survivalpoints <- x %*% dataset$survivalpoints
current_solution_weight <- x %*% dataset$weight
if (current_solution_weight > weightlimit)
return(0) else return(-current_solution_survivalpoints)
}
#e
GAmodel <- rbga.bin(size = 7, popSize = 200, iters = 100,
mutationChance = 0.01, elitism = T, evalFunc = fitnessFunc)
summary(GAmodel, echo=TRUE)
#f
iter<-100
animate_plot <- function() {
for (i in seq(1, iter)) {
temp <- data.frame(Iteracja = c(seq(1, i), seq(1, i)), Legenda = c(rep("Średnia",
i), rep("Najlepsza", i)), WartoscFitness = c(-GAmodel$mean[1:i], -GAmodel$best[1:i]))
pl <- ggplot(temp, aes(x = Iteracja, y = WartoscFitness, group = Legenda,
colour = Legenda)) + geom_line() + scale_x_continuous(limits = c(0,
iter)) + scale_y_continuous(limits = c(0, 110)) + geom_hline(y =
max(temp$WartoscFitness),
lty = 2) + annotate("text", x = 1, y = max(temp$WartoscFitness) +
2, hjust = 0, size = 3, color = "black", label = paste("Najlepsze rozwiązanie:",
max(temp$WartoscFitness))) + scale_colour_brewer(palette = "Set1")
print(pl)
}
}
iter<-100
animate_plot <- function() {
for (i in seq(1, iter)) {
temp <- data.frame(Iteracja = c(seq(1, i), seq(1, i)), Legenda = c(rep("Średnia",
i), rep("Najlepsza", i)), WartoscFitness = c(-GAmodel$mean[1:i], -GAmodel$best[1:i]))
pl <- ggplot(temp, aes(x = Iteracja, y = WartoscFitness, group = Legenda,
colour = Legenda)) + geom_line() + scale_x_continuous(limits = c(0,
iter)) + scale_y_continuous(limits = c(0, 110)) + geom_hline(y =
max(temp$WartoscFitness),
lty = 2) + annotate("text", x = 1, y = max(temp$WartoscFitness) +
2, hjust = 0, size = 3, color = "black", label = paste("Najlepsze rozwiązanie:",
max(temp$WartoscFitness))) + scale_colour_brewer(palette = "Set1")
print(pl)
}
}
source('H:/Dokumenty/ci/lab1/zad3.R')
source('H:/Dokumenty/ci/lab1/zad3.R')
source('H:/Dokumenty/ci/lab1/zad3.R')
source('H:/Dokumenty/ci/lab1/zad2.R')
source('H:/Dokumenty/ci/lab1/zad1.R')
