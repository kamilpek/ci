#Lab3/Zad2
iris <- data.matrix(iris)
head(iris)
names(iris) <- c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width", "Species")
iris
head(iris)
head(iris)
names(iris) <- c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width", "Species")
iris
#Lab3/Zad2
iris <- data.matrix(iris)
#Lab3/Zad2
iris <- data.matrix(iris)
iris
#Lab3/Zad2
iris <- data.matrix(iris[,5])
iris
#Lab3/Zad2
iris <- data.matrix(iris[,-5])
iris
#Lab3/Zad2
iris <- data.matrix(iris[,-5])
iris
#Lab3/Zad2
iris <- data.matrix(iris[,-5])
iris
#Lab3/Zad2
library(class)
iris <- data.matrix(iris[,-5])
iris
#Lab3/Zad2
library(class)
iris <- data.matrix(iris[,-5])
iris
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#Lab3/Zad2
library(class)
iris <- data.matrix(iris[,-5])
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#Lab3/Zad2
library(class)
iris <- data.matrix(iris[,-5])
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
summary(iris_norm)
#Lab3/Zad2
library(class)
iris <- iris
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
summary(iris_norm)
#Lab3/Zad2
library(class)
iris <- data.matrix(iris[,-5])
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
summary(iris_norm)
str(iris)
#Lab3/Zad2
library(class)
iris <- iris
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
summary(iris_norm)
#Lab3/Zad2
library(class)
iris <- iris
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
summary(iris_norm)
str(iris)
#Lab3/Zad2
library(class)
iris <- iris
table(iris$Species)
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
summary(iris_norm)
#Lab3/Zad2
library(class)
iris <- iris
table(iris$Species)
round(prop.table(table(iris$Species)) * 100, digits = 1)
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
summary(iris_norm)
#Lab3/Zad2
library(class)
iris <- iris
table(iris$Species)
round(prop.table(table(iris$Species)) * 100, digits = 1)
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
summary(iris_norm)
#Lab3/Zad2
library(class)
iris <- iris
table(iris$Species)
round(prop.table(table(iris$Species)) * 100, digits = 1)
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
#summary(iris_norm)
#
iris.training <- iris[ind==1, 1:4]
head(iris.training)
iris.test <- iris[ind==2, 1:4]
head(iris.test)
#summary(iris_norm)
#
iris.training <- iris[ind==1, 1:4]
#Lab3/Zad2
library(class)
iris <- iris
table(iris$Species)
round(prop.table(table(iris$Species)) * 100, digits = 1)
set.seed(1234)
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.67, 0.33))
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
#summary(iris_norm)
#
iris.training <- iris[ind==1, 1:4]
head(iris.training)
iris.test <- iris[ind==2, 1:4]
head(iris.test)
#Lab3/Zad2
library(class)
iris <- iris
table(iris$Species)
round(prop.table(table(iris$Species)) * 100, digits = 1)
set.seed(1234)
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.67, 0.33))
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
#summary(iris_norm)
#
iris.training <- iris[ind==1, 1:4]
iris.test <- iris[ind==2, 1:4]
#
iris.trainLabels <- iris[ind==1,5]
print(iris.trainLabels)
iris.testLabels <- iris[ind==2, 5]
print(iris.testLabels)
#Lab3/Zad2
library(class)
iris <- iris
table(iris$Species)
round(prop.table(table(iris$Species)) * 100, digits = 1)
set.seed(1234)
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.67, 0.33))
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
#summary(iris_norm)
#
iris.training <- iris[ind==1, 1:4]
iris.test <- iris[ind==2, 1:4]
#
iris.trainLabels <- iris[ind==1,5]
iris.testLabels <- iris[ind==2, 5]
#Lab3/Zad2
library(class)
iris <- iris
table(iris$Species)
round(prop.table(table(iris$Species)) * 100, digits = 1)
set.seed(1234)
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.67, 0.33))
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
#summary(iris_norm)
#
iris.training <- iris[ind==1, 1:4]
iris.test <- iris[ind==2, 1:4]
#
iris.trainLabels <- iris[ind==1,5]
print(iris.trainLabels)
iris.testLabels <- iris[ind==2, 5]
print(iris.testLabels)
#
iris_pred <- knn(train = iris.training, test = iris.test, cl = iris.trainLabels, k=3)
#Lab3/Zad2
library(class)
iris <- iris
table(iris$Species)
round(prop.table(table(iris$Species)) * 100, digits = 1)
set.seed(1234)
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.67, 0.33))
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
#summary(iris_norm)
#
iris.training <- iris[ind==1, 1:4]
iris.test <- iris[ind==2, 1:4]
#
iris.trainLabels <- iris[ind==1,5]
iris.testLabels <- iris[ind==2, 5]
#
iris_pred <- knn(train = iris.training, test = iris.test, cl = iris.trainLabels, k=3)
iris_pred
#Lab3/Zad2
library(class)
iris <- iris
table(iris$Species)
round(prop.table(table(iris$Species)) * 100, digits = 1)
set.seed(1234)
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.67, 0.33))
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
#summary(iris_norm)
#
iris.training <- iris[ind==1, 1:4]
iris.test <- iris[ind==2, 1:4]
#
iris.trainLabels <- iris[ind==1,5]
iris.testLabels <- iris[ind==2, 5]
#
iris_pred <- knn(train = iris.training, test = iris.test, cl = iris.trainLabels, k=3)
iris_pred
#
irisTestLabels <- data.frame(iris.testLabels)
merge <- data.frame(iris_pred, iris.testLabels)
names(merge) <- c("Predicted Species", "Observed Species")
merge
#Lab3/Zad2
library(class)
library(gmodels)
#
iris <- iris
table(iris$Species)
round(prop.table(table(iris$Species)) * 100, digits = 1)
set.seed(1234)
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.67, 0.33))
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
#summary(iris_norm)
#
iris.training <- iris[ind==1, 1:4]
iris.test <- iris[ind==2, 1:4]
#
iris.trainLabels <- iris[ind==1,5]
iris.testLabels <- iris[ind==2, 5]
#
iris_pred <- knn(train = iris.training, test = iris.test, cl = iris.trainLabels, k=3)
iris_pred
#
irisTestLabels <- data.frame(iris.testLabels)
merge <- data.frame(iris_pred, iris.testLabels)
names(merge) <- c("Predicted Species", "Observed Species")
merge
#
CrossTable(x = iris.testLabels, y = iris_pred, prop.chisq=FALSE)
install.packages("gmodels")
#Lab3/Zad2
library(class)
library(gmodels)
#
iris <- iris
table(iris$Species)
round(prop.table(table(iris$Species)) * 100, digits = 1)
set.seed(1234)
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.67, 0.33))
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
#summary(iris_norm)
#
iris.training <- iris[ind==1, 1:4]
iris.test <- iris[ind==2, 1:4]
#
iris.trainLabels <- iris[ind==1,5]
iris.testLabels <- iris[ind==2, 5]
#
iris_pred <- knn(train = iris.training, test = iris.test, cl = iris.trainLabels, k=3)
iris_pred
#
irisTestLabels <- data.frame(iris.testLabels)
merge <- data.frame(iris_pred, iris.testLabels)
names(merge) <- c("Predicted Species", "Observed Species")
merge
#
CrossTable(x = iris.testLabels, y = iris_pred, prop.chisq=FALSE)
index <- createDataPartition(iris$Species, p=0.75, list=FALSE)
iris.training <- iris[index,]
iris.test <- iris[-index,]
#Lab3/Zad2
library(class)
library(gmodels)
#
iris <- iris
table(iris$Species)
round(prop.table(table(iris$Species)) * 100, digits = 1)
set.seed(1234)
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.67, 0.33))
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
#
iris_norm <- as.data.frame(lapply(iris[1:4], normalize))
#summary(iris_norm)
#
iris.training <- iris[ind==1, 1:4]
iris.test <- iris[ind==2, 1:4]
#
iris.trainLabels <- iris[ind==1,5]
iris.testLabels <- iris[ind==2, 5]
#
iris_pred <- knn(train = iris.training, test = iris.test, cl = iris.trainLabels, k=3)
iris_pred
#
irisTestLabels <- data.frame(iris.testLabels)
merge <- data.frame(iris_pred, iris.testLabels)
names(merge) <- c("Predicted Species", "Observed Species")
merge
#
CrossTable(x = iris.testLabels, y = iris_pred, prop.chisq=FALSE)
index <- createDataPartition(iris$Species, p=0.75, list=FALSE)
#
CrossTable(x = iris.testLabels, y = iris_pred, prop.chisq=FALSE)
#
CrossTable(x = iris.testLabels, y = iris_pred, prop.chisq=FALSE)
install.packages("e1071")
install.packages(c("glue", "lazyeval"))
#Lab3/Zad3
library(e1071)
#Lab3/Zad3
library(e1071)
#
iris <- iris
#
iris.training <- iris[ind==1, 1:4]
iris.test <- iris[ind==2, 1:4]
head(iris.test)
iris.test
summary(iris.test)
