source('~/Dokumenty/ci/labs/lab5/zad3.R')
source('~/Dokumenty/ci/labs/lab5/zad3.R')
source('~/Dokumenty/ci/labs/lab5/zad3.R')
source('~/Dokumenty/ci/labs/lab5/zad3.R')
source('~/Dokumenty/ci/labs/lab5/zad3.R')
source('~/Dokumenty/ci/labs/lab5/zad3.R')
source('~/Dokumenty/ci/labs/lab5/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
#Lab6/Zad2
require(neuralnet)
library(caret)
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
split_species <- function(iris) {
for(x in 1:nrow(iris)){
if(iris[x,5] == "setosa") iris[x,6] = 1
if(iris[x,5] == "versicolor") iris[x,7] = 1
if(iris[x,5] == "virginica") iris[x,8] = 1
}
return (iris[,-5])
}
#
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.67, 0.33))
iris.norm <- as.data.frame(lapply(iris[1:4], normalize))
iris.norm <- cbind(iris.norm, iris$Species)
species_names <- c("setosa", "versicolor", "virginica")
species <- matrix(0, nrow = 150, ncol = 3)
colnames(species) <- species_names
iris.norm <- cbind(iris.norm, species)
iris.norm <- split_species(iris.norm)
iris.training <- iris.norm[ind==1, 1:7]
iris.test <- iris.norm[ind==2, 1:7]
#
iris.nn <- neuralnet(setosa + versicolor + virginica ~
Sepal.Length + Sepal.Width + Petal.Length + Petal.Width,
data=iris.norm, hidden=4)
#plot(iris.nn, main="Iris Neural Network")
iris.predict <- compute(iris.nn, iris.test[1:4], rep=1)
#iris.cm <- confusionMatrix(iris.predict, womens[,9])
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
View(siatk)
source('~/Dokumenty/ci/labs/lab6/zad1.R')
View(siatk)
source('~/Dokumenty/ci/labs/lab6/zad1.R')
View(siatk)
View(siatk)
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
#Lab6/Zad1
require(neuralnet)
#
siatk <- matrix(c(23, 75, 176, 1,
25, 67, 180, 1,
28, 120, 175, 0,
22, 65, 165, 1,
46, 70, 187, 1,
50, 68, 180, 0,
48, 97, 178, 0),
nrow=7, ncol=4, byrow = TRUE)
rownames(siatk) <- c("wiek", "waga", "wzrost")
#Lab6/Zad1
require(neuralnet)
#
siatk <- matrix(c(23, 75, 176, 1,
25, 67, 180, 1,
28, 120, 175, 0,
22, 65, 165, 1,
46, 70, 187, 1,
50, 68, 180, 0,
48, 97, 178, 0),
nrow=7, ncol=4, byrow = TRUE)
colnames(siatk) <- c("wiek", "waga", "wzrost", "gra")
View(siatk)
source('~/Dokumenty/ci/labs/lab6/zad1.R')
View(siatk)
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
#
siatk.nn <- neuralnet(gra~wiek+waga+wzrost, siatk.dane, hidden=2, lifesign="full")
#
siatk.nn <- neuralnet(gra ~ wiek + waga + wzrost, siatk.dane, hidden=2, lifesign="full")
View(siatk.dane)
source('~/Dokumenty/ci/labs/lab6/zad1.R')
plot(siatk.nn)
#plot(siatk.nn)
#
siatk.predict <- compute(siatk.nn, siatk.dane[1:3])
#Lab6/Zad1
require(neuralnet)
#
siatk.dane <- matrix(c(23, 75, 176, 1,
25, 67, 180, 1,
28, 120, 175, 0,
22, 65, 165, 1,
46, 70, 187, 1,
50, 68, 180, 0,
48, 97, 178, 0),
nrow=7, ncol=4, byrow = TRUE)
colnames(siatk.dane) <- c("wiek", "waga", "wzrost", "gra")
#
siatk.nn <- neuralnet(gra ~ wiek + waga + wzrost, siatk.dane, hidden=2, lifesign="full")
#plot(siatk.nn)
#
siatk.predict <- compute(siatk.nn, siatk.dane[1:3])
#plot(siatk.nn)
#
siatk.predict <- compute(siatk.nn, siatk.dane[1:3])
source('~/Dokumenty/ci/labs/lab6/zad1.R')
siatk.dane[1:3]
siatk.dane[1]
siatk.dane
#plot(siatk.nn)
#
siatk.predict <- compute(siatk.nn, siatk.dane)
siatk.dane[,1:3]
source('~/Dokumenty/ci/labs/lab6/zad1.R')
View(siatk.predict)
siatk.predict[["net.result"]]
View(siatk.nn)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
head(iris.predict)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
View(iris.predict)
source('~/Dokumenty/ci/labs/lab6/zad1.R')
View(siatk.predict)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
View(iris.predict)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
View(iris.predict)
iris.test[,1:4]
iris.test[1:4]
iris.test[,1:4]
iris.predict <- compute(iris.nn, iris.test[,1:4])$net.result
iris.predict
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris.cm <- confusionMatrix(iris.predict, iris.test)
#plot(iris.nn, main="Iris Neural Network")
iris.predict <- compute(iris.nn, iris.training[,1:4], type = 'class')$net.result
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris.cm <- confusionMatrix(as.factor(iris.predict), iris.test[,1:4])
iris.cm <- confusionMatrix(factor(iris.predict), iris.test[,1:4])
factor(iris.predict)
iris.predict
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
siatk.cm <- confusionMatrix(siatk.predict, siatk.dane[,1:3])
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris.predict
iris.cm <- confusionMatrix(iris.predict, iris.training[,1:4])
iris.cm <- confusionMatrix(iris.predict, iris.training[,1:4])
iris.predict
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris.predict
iris.training[,1:4]
iris.cm <- confusionMatrix(iris.predict, iris.training[,1:4])
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/.active-rstudio-document')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris.cm <- confusionMatrix(iris.predict, iris.training[,5:7])
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab3/zad5.R')
source('~/Dokumenty/ci/labs/lab3/zad5.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris.training[,5:7]
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab5/zad3.R')
kmeans
colMeans(as.data.frame(iris.clustering[1])[,1:2])[1]
