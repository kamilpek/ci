source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
siatk.dane[,4]
siatk.predict
source('~/Dokumenty/ci/labs/lab6/zad1.R')
siatk.dane[,4]
source('~/Dokumenty/ci/labs/lab6/zad1.R')
siatk.dane[,1:3]
siatk.dane[,4]
siatk.dane[,4:4]
siatk.dane[4]
siatk.dane
siatk.dane$gra
siatk.dane[,4]
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
siatk.dane
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
class(siatk.dane)
class(siatk.dane[,4])
class(siatk.dane[,1:3])
source('~/Dokumenty/ci/labs/lab6/zad1.R')
clss(iris.predict)
clsss(iris.predict)
class(iris.predict)
class(iris.training)
source('~/Dokumenty/ci/labs/lab6/zad1.R')
class(siatk.dane[,1:3])
class(siatk.dane[,4])
siatk.dane[,4]
siatk.dane$gra
source('~/Dokumenty/ci/labs/lab6/zad1.R')
matrix(siatk.dane$gra, ncol=4)
matrix(siatk.dane$gra, ncol=1)
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
siatk.predict
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
siatk.predict
matrix(siatk.dane[,4], ncol=1)
siatk.dane[,4]
source('~/Dokumenty/ci/labs/lab6/zad1.R')
# Dane
womens = read.csv("diabetes.csv")
source('~/Dokumenty/ci/labs/lab3/zad5.R')
womens[,9]
ctree_pred
ctree_pred
womens[,9]
nb_pred
iris.predict
iris.training[,5:7]
iris.predict
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris.predict[1,]
iris.predict[2,]
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris.predict[2,]
iris.predict[1,]
iris.predict[1,1] == max(iris.predict[1,])
iris.predict[1,2] == max(iris.predict[1,])
iris.predict[1,3] == max(iris.predict[1,])
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris.predict[3,3] == max(iris.predict[3,])
iris.predict[3,2] == max(iris.predict[3,])
iris.predict[3,1] == max(iris.predict[3,])
iris.predict[147,3] == max(iris.predict[147,])
iris.predict[147,3]
iris.predict[147]
iris.predict[147,1]
iris.predict
iris.predict[147,]
iris.predict[148,]
iris.predict
iris.predict[148]
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris.predict
iris.predict[150,]
iris.predict[55]
iris.predict[55,]
nrow(iris.predict)
iris.predict[94,]
iris.predict[95,]
iris.predict[94,1]
iris.predict[94,2]
iris.predict[94,3]
max(iris.predict[94,])
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris.predict.round
iris.training[,5:7]
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris.training[,5:7]
iris.predict.round
iris.norm[0,]
iris.predict[0,]
iris.predict[,0]
source('~/Dokumenty/ci/labs/lab6/zad2.R')
View(iris.predict.round)
View(iris.training)
View(iris.predict)
iris.predict[,0]
iris.predict.round[,0]
source('~/Dokumenty/ci/labs/lab6/zad2.R')
View(iris.predict.round)
View(iris.predict.round)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
View(iris.predict.round)
View(iris.predict)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
View(iris.predict)
View(iris.training)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
View(iris.predict)
View(iris.training[,5:7])
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
class(iris.predict)
source('~/Dokumenty/ci/labs/lab3/zad5.R')
class(nb_pred)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
class(iris.predict)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris$Species
source('~/Dokumenty/ci/labs/lab6/zad2.R')
prediction
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris.test$Species
iris[,5]
source('~/Dokumenty/ci/labs/lab6/zad2.R')
#Lab6/Zad2
require(neuralnet)
library(caret)
#
normalize <- function(x) {
num <- x - min(x)
denom <- max(x) - min(x)
return (num/denom)
}
split_species <- function(iris) {
for(x in 1:nrow(iris)){
if(iris[x,5] == "setosa") iris[x,6] = 1
if(iris[x,5] == "versicolor") iris[x,7] = 1
if(iris[x,5] == "virginica") iris[x,8] = 1
}
return (iris[,-5])
}
maxidx <- function(arr) {
return(which(arr == max(arr)))
}
#
ind <- sample(2, nrow(iris), replace=TRUE, prob=c(0.67, 0.33))
iris.norm <- as.data.frame(lapply(iris[1:4], normalize))
iris.norm <- cbind(iris.norm, iris$Species)
species_names <- c("setosa", "versicolor", "virginica")
species <- matrix(0, nrow = 150, ncol = 3)
colnames(species) <- species_names
iris.norm <- cbind(iris.norm, species)
iris.norm <- split_species(iris.norm)
iris.training <- iris.norm[ind==1, 1:7]
iris.test <- iris.norm[ind==2, 1:7]
iris.training.labels <- iris[ind==1, 5]
iris.test.labels <- iris[ind==2, 5]
#
iris.nn <- neuralnet(setosa + versicolor + virginica ~
Sepal.Length + Sepal.Width + Petal.Length + Petal.Width,
data=iris.training, hidden=4)
#plot(iris.nn, main="Iris Neural Network")
iris.predict <- compute(iris.nn, iris.test[,1:4])$net.result
idx <- apply(iris.predict, c(1), maxidx)
prediction <- c('setosa', 'versicolor', 'virginica')[idx]
table(prediction, iris.test.labels)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
View(iris.cm)
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
siatk.predict
prediction()
prediction
c
source('~/Dokumenty/ci/labs/lab6/zad2.R')
iris.predict
idx
source('~/Dokumenty/ci/labs/lab6/zad1.R')
idx
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
siatk.predict
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
View(iris.cm)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
nn_accuracy
source('~/Dokumenty/ci/labs/lab6/zad2.R')
View(iris.cm)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad2.R')
plot(iris.nn)
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
View(womens)
View(womens)
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
class(womens.training)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
class(iris.training)
class(womens.training)
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
womens[,0]
womens[0,]
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
class(womens)
class(womens.training)
source('~/Dokumenty/ci/labs/lab6/zad3.R')
#
womens.nn <- neuralnet(class ~ insulin + mass.index + age, data=womens.training, hidden=2)
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
#
womens.nn <- neuralnet(class ~ insulin + mass.index + age, data=womens, hidden=2)
source('~/Dokumenty/ci/labs/lab6/zad3.R')
str(womens)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
View(womens)
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
hist(womens$pregnant.times)
hist(womens$class)
hist(womens$class)
c
clear
View(womens)
View(womens)
source('~/Dokumenty/ci/labs/lab6/zad3.R')
womens[1,9] == "tested_positive"
womens[2,9] == "tested_positive"
womens[2,9] == "tested_negative"
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
View(womens.test)
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad1.R')
siatk.fun(23,75,176)
source('~/Dokumenty/ci/labs/lab6/zad1.R')
siatk.fun(23,75,176)
siatk.fun(48,97,178)
siatk.fun(50,68,180)
source('~/Dokumenty/ci/labs/lab6/zad1.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
summary(womens.norm)
View(womens.norm)
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
plot(womens.nn)
View(womens.norm)
View(womens.training)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
View(iris.training)
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
#
womens.predict <- compute(womens.nn, womes.test[,1:7])$net.result
#
womens.predict <- compute(womens.nn, womens.test[,1:7])$net.result
womens.test[,1:7]
iris.test[,1:4]
#
womens.predict <- compute(womens.nn, womens.test[,1:7])$net.result
source('~/Dokumenty/ci/labs/lab6/zad3.R')
#
womens.predict <- compute(womens.nn)$net.result
#
womens.predict <- compute(womens.nn)$net.result
#
womens.predict <- compute(womens.nn, womens.test)$net.result
source('~/Dokumenty/ci/labs/lab6/zad3.R')
#
womens.predict <- compute(womens.nn, womens.test[,1:8])$net.result
womens.cm <- confusionMatrix(womens.predict, womens.testLabels)
source('~/Dokumenty/ci/labs/lab6/zad3.R')
womens.cm <- confusionMatrix(womens.predict, womens.testLabels)
idx <- apply(womens.predict, c(1), maxidx)
maxidx <- function(arr) {
return(which(arr == max(arr)))
}
idx <- apply(womens.predict, c(1), maxidx)
womens.predict <- c('positive', 'negative')[idx]
womens.cm <- confusionMatrix(womens.predict, womens.testLabels)
source('~/Dokumenty/ci/labs/lab6/zad3.R')
print(womens.cm$table)
print(womens.cm$overall['Accuracy'])
nn_tp <- womens.cm$table["tested_negative","tested_negative"]
nn_tn <- womens.cm$table["tested_positive","tested_positive"]
nn_fn <- womens.cm$table["tested_negative","tested_positive"]
nn_fp <- womens.cm$table["tested_positive","tested_negative"]
nn_fpr <- nn_fp/(nn_fp+nn_tn)
nn_tpr <- nn_tp/(nn_tp+nn_fn)
nn_accuracy <- womens.cm$overall['Accuracy']
classificators <- matrix(c(nn_accuracy), ncol=1)
classificators.names <- matrix(c("Neural Nets"), ncol=1)
barplot(classificators, main="Skuteczność Klasyfikatorów", names.arg=classificators.names,
ylab="Skuteczność [%]", xlab="Klasyfikatory")
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab3/zad5.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
source('~/Dokumenty/ci/labs/lab6/zad3.R')
# Wykres punktowy
# FPR = FP/N = FP/(FP+TN) = 1 - SPC
# TPR = TP/P = TP/(TP+FN)
colors <- c("blue", "coral", "aquamarine", "cornflowerblue", "darkgreen", "burlywood3")
fpr <- c(knn1_fpr, knn3_fpr, knn5_fpr, knn11_fpr, nb_fpr, ct_fpr)
tpr <- c(knn1_tpr, knn3_tpr, knn5_tpr, knn11_fpr, nb_tpr, ct_tpr)
plot(fpr, tpr, col=colors, bg=colors, pch=21, xlab="False Positive Rate", ylab="True Positive Rate",
main="False Positive and True Positive Ratings")
legend("bottomright", classificators.names, fill=colors)
source('~/Dokumenty/ci/labs/lab6/zad3.R')
