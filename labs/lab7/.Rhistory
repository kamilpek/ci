#
titanic.raw <- load(titanic.raw.rdata, envir = parent.frame(), verbose = FALSE)
#
titanic.raw <- load("titanic.raw.rdata")
rules <- apriori(titanic.raw)
source('~/Dokumenty/ci/labs/lab7/zad2.R')
source('~/Dokumenty/ci/labs/lab7/zad2.R')
#
titanic.raw <- load("titanic.raw.rdata")
rules <- apriori(titanic.raw)
source('~/Dokumenty/ci/labs/lab7/zad2.R')
#
titanic.raw <- as.data.frame(load("titanic.raw.rdata"))
rules <- apriori(titanic.raw)
View(titanic.raw)
load("~/Dokumenty/ci/labs/lab7/titanic.raw.rdata")
#
#titanic.raw <- as.data.frame(load("titanic.raw.rdata"))
rules <- apriori(titanic.raw)
View(titanic.raw)
#
#titanic.raw <- as.data.frame(load("titanic.raw.rdata"))
rules <- apriori(titanic.raw)
inspect(rules)
#Lab7/Zad2
library(arules)
#
#titanic.raw <- as.data.frame(load("titanic.raw.rdata"))
rules <- apriori(titanic.raw,
parameter = list(minlen=2, supp=0.005, conf=0.8),
appearance = list(rhs=c("Survived=No", "Survived=Yes"), default="lhs"),
control = list(verbose=F))
rules.sorted <- sort(rules, by="lift")
inspect(rules.sorted)
#Lab7/Zad2
library(arules)
#
#titanic.raw <- as.data.frame(load("titanic.raw.rdata"))
rules <- apriori(titanic.raw,
parameter = list(minlen=2, supp=0.005, conf=0.8),
appearance = list(rhs=c("Survived=No", "Survived=Yes"), default="lhs"),
control = list(verbose=F))
rules.sorted <- sort(rules, by="lift")
inspect(rules.sorted)
subset.matrix <- is.subset(rules.sorted, rules.sorted)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
edundant <- colSums(subset.matrix, na.rm=T) >= 1
rules.pruned <- rules.sorted[!redundant]
inspect(rules.pruned)
inspect(rules.sorted)
subset.matrix <- is.subset(rules.sorted, rules.sorted)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
edundant <- colSums(subset.matrix, na.rm=T) >= 1
rules.pruned <- rules.sorted[!redundant]
#Lab7/Zad2
library(arules)
#
#titanic.raw <- as.data.frame(load("titanic.raw.rdata"))
rules <- apriori(titanic.raw,
parameter = list(minlen=2, supp=0.005, conf=0.8),
appearance = list(rhs=c("Survived=No", "Survived=Yes"), default="lhs"),
control = list(verbose=F))
rules.sorted <- sort(rules, by="lift")
inspect(rules.sorted)
subset.matrix <- is.subset(rules.sorted, rules.sorted)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
redundant <- colSums(subset.matrix, na.rm=T) >= 1
rules.pruned <- rules.sorted[!redundant]
inspect(rules.pruned)
inspect(rules.pruned)
load("~/Dokumenty/ci/labs/lab7/titanic.raw.rdata")
source('~/Dokumenty/ci/labs/lab7/zad2.R')
#Lab7/Zad2
library(arules)
#
load("titanic.raw.rdata")
rules <- apriori(titanic.raw,
parameter = list(minlen=2, supp=0.005, conf=0.8),
appearance = list(rhs=c("Survived=No", "Survived=Yes"), default="lhs"),
control = list(verbose=F))
#
subset.matrix <- is.subset(rules.sorted, rules.sorted)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
redundant <- colSums(subset.matrix, na.rm=T) >= 1
rules.pruned <- rules.sorted[!redundant]
inspect(rules.pruned)
source('~/Dokumenty/ci/labs/lab6/zad2.R')
source('~/Dokumenty/ci/labs/lab7/zad2.R')
source('~/Dokumenty/ci/labs/lab7/zad2.R')
source('~/Dokumenty/ci/labs/lab7/zad2.R')
source('~/Dokumenty/ci/labs/lab7/zad2.R')
View(titanic.raw)
source('~/Dokumenty/ci/labs/lab7/zad2.R')
source('~/Dokumenty/ci/labs/lab7/zad2.R')
inspect(rules.pruned)
inspect(rules.sorted)
source('~/Dokumenty/ci/labs/lab7/zad2.R')
View(rules.pruned)
redundant <- colSums(subset.matrix, na.rm=T) >= 1
rules.pruned <- rules.sorted[!redundant]
subset.matrix <- is.subset(rules.sorted, rules.sorted)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
#Lab7/Zad2
library(arules)
#
load("titanic.raw.rdata")
#
rules <- apriori(titanic.raw,
parameter = list(minlen=2, supp=0.005, conf=0.8),
appearance = list(rhs=c("Survived=No", "Survived=Yes"), default="lhs"),
control = list(verbose=F))
#
rules.sorted <- sort(rules, by="lift")
subset.matrix <- is.subset(rules.sorted, rules.sorted)
#subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
redundant <- colSums(subset.matrix, na.rm=T) >= 1
rules.pruned <- rules.sorted[!redundant]
inspect(rules.pruned)
redundant
source('~/Dokumenty/ci/labs/lab7/zad2.R')
subset.matrix
roles.sorted
rules.sorted
View(rules.sorted)
#
rules.sorted <- sort(rules, by="lift")
subset.matrix <- is.subset(rules.sorted, rules.sorted)
source('~/Dokumenty/ci/labs/lab7/zad2.R')
lower.tri(subset.matrix, diag=T)
#Lab7/Zad2
library(arules)
#
load("titanic.raw.rdata")
#
rules <- apriori(titanic.raw,
parameter = list(minlen=2, supp=0.005, conf=0.8),
appearance = list(rhs=c("Survived=No", "Survived=Yes"), default="lhs"),
control = list(verbose=F))
#
rules.sorted <- sort(rules, by="lift")
subset.matrix <- is.subset(rules.sorted, rules.sorted)
subset.matrix[lower.tri(subset.matrix, diag=FLASE)] <- NA
redundant <- colSums(subset.matrix, na.rm=FLASE) >= 1
rules.pruned <- rules.sorted[!redundant]
inspect(rules.pruned)
#Lab7/Zad2
library(arules)
#
load("titanic.raw.rdata")
#
rules <- apriori(titanic.raw,
parameter = list(minlen=2, supp=0.005, conf=0.8),
appearance = list(rhs=c("Survived=No", "Survived=Yes"), default="lhs"),
control = list(verbose=F))
#
rules.sorted <- sort(rules, by="lift")
subset.matrix <- is.subset(rules.sorted, rules.sorted)
subset.matrix[lower.tri(subset.matrix, diag=FALSE)] <- NA
redundant <- colSums(subset.matrix, na.rm=FALSE) >= 1
rules.pruned <- rules.sorted[!redundant]
inspect(rules.pruned)
