plot(dji.msts)
#
dji.msts <- msts(rev(dji), seasonal.periods=c(7,365.25), end=2020)
plot(dji.msts)
plot(dji)
#
dji.msts <- msts(dji, seasonal.periods=c(7,365.25), end=2020)
plot(dji.msts)
#
dji.msts <- msts(dji, seasonal.periods=c(7,365.25))
plot(dji.msts)
#
dji.msts <- msts(dji, seasonal.periods=c(7,365.25), end=2020)
plot(dji.msts)
#
dji.msts <- msts(dji, seasonal.periods=c(7,365.25), start=2015, end=2020)
plot(dji.msts)
#
fit <- nnetar(dji.msts, p = 9, P=, size = 10, repeats = 50, lambda = 0)
plot(forecast(fit, 10))
source('~/Dokumenty/inteligencja/projekt/neuralnet.R')
source('~/Dokumenty/inteligencja/projekt/neuralnet.R')
source('~/Dokumenty/inteligencja/projekt/neuralnet.R')
source('~/Dokumenty/inteligencja/projekt/arima_daily.R')
View(dji.prices)
plot(fit)
source('~/Dokumenty/inteligencja/projekt/neuralnet.R')
plot(fit)
source('~/Dokumenty/inteligencja/projekt/neuralnet.R')
source('~/Dokumenty/inteligencja/projekt/neuralnet.R')
source('~/Dokumenty/inteligencja/projekt/arima_daily.R')
source('~/Dokumenty/inteligencja/projekt/arima_daily.R')
source('~/Dokumenty/inteligencja/projekt/arima_daily.R')
source('~/Dokumenty/inteligencja/projekt/arima_daily.R')
plot(dji.msts)
plot(dji.msts)
#
dji.msts <- msts(dji, seasonal.periods=c(7,365.25), start=2015, end=2020)
plot(dji.msts)
source('~/Dokumenty/inteligencja/projekt/arima_daily.R')
source('~/Dokumenty/inteligencja/projekt/arima_daily.R')
source('~/Dokumenty/inteligencja/projekt/neuralnet.R')
source('~/Dokumenty/inteligencja/projekt/arima_daily.R')
source('~/Dokumenty/inteligencja/projekt/arima_daily.R')
source('~/Dokumenty/inteligencja/projekt/neuralnet.R')
plot(dji.prices)
plot(dji)
source('~/Dokumenty/inteligencja/projekt/neuralnet.R')
source('~/Dokumenty/inteligencja/projekt/arima_daily.R')
source('~/Dokumenty/inteligencja/projekt/arima_daily.R')
source('~/Dokumenty/inteligencja/projekt/arima_daily.R')
source('~/Dokumenty/inteligencja/projekt/neuralnet.R')
source('~/Dokumenty/inteligencja/projekt/neuralnet.R')
source('~/Dokumenty/inteligencja/projekt/arima_daily.R')
source('~/Dokumenty/inteligencja/projekt/arima_daily.R')
source('~/Dokumenty/inteligencja/projekt/neuralnet.R')
source('~/Dokumenty/inteligencja/projekt/forecast.R')
source('~/Dokumenty/inteligencja/projekt/forecast.R')
dji.nnet.f
dji.nnet.f[1,]
dji.nnet.f[1,1]
dji.nnet.f[1]
dji.nnet.f[,1]
class(dji.nnet.f)
as.numeric(dji.nnet.f$mean)
as.numeric(dji.nnet.f$mean)[1]
as.numeric(dji.nnet.f$mean)[1,]
as.numeric(dji.nnet.f$mean)[1]
View(dji.prices)
plot(dji)
dji[1]
tails(dji)
tail(dji)
as.numeric(dji.arima.f$mean)[1]
as.numeric(dji.nnet.f$mean)[1]
plot(dji.nnet.f)
plot(dji.prices$Close)
as.numeric(dji.nnet.f$mean)[1:5]
#
print("Arima forecast: %f", as.numeric(dji.arima.f$mean)[1])
#
sprint("Arima forecast: %f", as.numeric(dji.arima.f$mean)[1])
#
print("Arima forecast: %f", as.numeric(dji.arima.f$mean)[1])
#
print("%f", as.numeric(dji.arima.f$mean)[1])
#
print("%e", as.numeric(dji.arima.f$mean)[1])
#
print("%i", as.numeric(dji.arima.f$mean)[1])
#
print("%i", dji.arima.f$mean[1])
#
print("%s", dji.arima.f$mean[1])
#
dji.arima.f$mean[1]
as.numeric(dji.arima.f$mean)[1]
as.character(dji.arima.f$mean)[1]
#
print("%s", as.character(dji.arima.f$mean)[1])
#
print("%s", as.character(dji.arima.f$mean[1]))
as.character(dji.arima.f$mean[1])
#
print("%c", as.character(dji.arima.f$mean[1]))
#
sprintf("%c", as.character(dji.arima.f$mean[1]))
#
sprintf("%s", as.character(dji.arima.f$mean[1]))
#
sprintf("Arima foracast: %s", as.character(dji.arima.f$mean[1]))
source('~/Dokumenty/inteligencja/projekt/forecast.R')
Print(sprintf("Neural Network foracast: %s", as.character(dji.nnet.f$mean[1])))
print(sprintf("Neural Network foracast: %s", as.character(dji.nnet.f$mean[1])))
source('~/Dokumenty/inteligencja/projekt/forecast.R')
Sys.time()
Sys.Date()
Sys.Date()+1
source('~/Dokumenty/inteligencja/projekt/forecast.R')
class(dji.prices)
dji.prices.last
dji.prices$Date[1,]
dji.prices$Date[1]
tails(dji.prices$Date, n=1)
tail(dji.prices$Date, n=1)
tail(dji.prices$Date, n=1)+1
#
print(sprintf("Forecast for next day after %s", as.character(tail(dji.prices$Date, n=1))))
source('~/Dokumenty/inteligencja/projekt/forecast.R')
source('~/Dokumenty/inteligencja/projekt/nlp.R')
source('~/Dokumenty/inteligencja/projekt/nlp.R')
html_nodes(bloomberg.html, "script")
html_nodes(bloomberg.html, "script window.__bloomberg__.bootstrapData")
html_nodes(bloomberg.html, "window.__bloomberg__.bootstrapData")
html_nodes(bloomberg.html, "script")
html_nodes(bloomberg.html, "script")
html_nodes(bloomberg.html, "headline__07dbac92")
html_nodes(bloomberg.html, "div headline__07dbac92")
html_nodes(bloomberg.html, "div")
bloomberg.html %>% html_nodes("div")
bloomberg.html %>% html_nodes("div") %>% html_nodes("headline__07dbac92")
bloomberg.html %>% html_nodes("div") %>% html_nodes("headline__07dbac92 withThumbnail__c3b7267c")
bloomberg.html %>% html_nodes("div") %>% html_nodes("text__ebd4e2ca")
bloomberg.html %>% html_nodes("text__ebd4e2ca")
bloomberg.html %>% html_nodes("div:text__ebd4e2ca")
bloomberg.html %>% html_nodes("#text__ebd4e2ca")
bloomberg.html %>% html_nodes("#text__ebd4e2ca div")
html_nodes(bloomberg.html, "#text__ebd4e2ca div")
html_nodes(bloomberg.html, "#text__ebd4e2ca")
View(bloomberg.html)
xml_attrs(xml_child(xml_child(bloomberg.html, 2), 13))[["type"]]
html_nodes(bloomberg.html, "a")
html_nodes(bloomberg.html, "div.text__ebd4e2ca")
source('~/Dokumenty/inteligencja/projekt/nlp.R')
html_nodes(bloomberg.html, "div.text__ebd4e2ca")
html_nodes(bloomberg.html, "div#leaderboard")
bloomberg.html
bloomberg.html[2]
html_nodes(bloomberg.html[2], "div#leaderboard")
html_nodes(bloomberg.html, "div#leaderboard")
library("curl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library(curl)
#
# bloomberg - https://www.bloomberg.com/quote/INDU:IND
bloomberg.curl <- curl("https://www.bloomberg.com/quote/INDU:IND")
bloomber.lines <- readLines(bloomber.curl)
bloomber.lines <- readLines(bloomberg.curl)
source('~/Dokumenty/inteligencja/projekt/nlp.R')
#
# bloomberg - https://www.bloomberg.com/quote/INDU:IND
bloomberg.curl <- system("curl https://www.bloomberg.com/quote/INDU:IND")
bloomberg.html <- html(bloomberg.curl)
#
# bloomberg - https://www.bloomberg.com/quote/INDU:IND
bloomberg.html <- read_html(system("curl https://www.bloomberg.com/quote/INDU:IND"))
source('~/Dokumenty/inteligencja/projekt/nlp.R')
#
# bloomberg - https://www.bloomberg.com/quote/INDU:IND
bloomberg.html <- read_html(system("curl https://www.bloomberg.com/quote/INDU:IND"))
#
# bloomberg - https://www.bloomberg.com/quote/INDU:IND
#bloomberg.html <- read_html(system("curl https://www.bloomberg.com/quote/INDU:IND"))
bloomberg.html <- read_html("https://www.bloomberg.com/quote/INDU:IND")
bloomber.html %>% html_nodes("div")
bloomberg.html %>% html_nodes("div")
html_nodes(bloomberg.html, "div")
divs <- html_nodes(bloomberg.html, "div")
View(divs)
divs
divs <- html_nodes(bloomberg.html, "div bb-nav-root")
html_nodes(bloomberg.html, "div bb-nav-root")
html_nodes(bloomberg.html, "div,bb-nav-root")
html_nodes(bloomberg.html, "div.bb-nav-root")
html_nodes(bloomberg.html, "bb-nav-root")
html_nodes(bloomberg.html, "div.bb-nav-root")
html_nodes(bloomberg.html, "div.root")
html_nodes(bloomberg.html, "div#root")
html_nodes(bloomberg.html, "div.contentWell__b0c648c9")
#
# cnbc - https://www.cnbc.com/quotes/?symbol=.DJI
cnbc.html <- read_html("https://www.cnbc.com/quotes/?symbol=.DJI")
html_nodes(cnbc.html, "div.bucket")
html_nodes(cnbc.html, "div#quote_latest_from_cnbc_summary")
cnbc.news <- html_nodes(cnbc.html, "div#quote_latest_from_cnbc_summary")
html_text(cnbc.news)
cnbc.text <- html_text(cnbc.news)
cnbc.text <- gsub("\n", "", html_text(cnbc.news))
cnbc.text <- gsub("latest", "", gsub("\n", "", cnbc.text))
cnbc.text
cnbc.text <- gsub(" ", "", gsub("latest", "", gsub("\n", "", cnbc.text)))
cnbc.text <- gsub(" ", "", gsub("latest", "", gsub("\n", "", cnbc.text)))
cnbc.text
cnbc.news <- html_nodes(cnbc.html, "div#quote_latest_from_cnbc_summary")
cnbc.news
cnbc.news <- html_nodes(cnbc.news, "div.assets")
#
# cnbc - https://www.cnbc.com/quotes/?symbol=.DJI
cnbc.html <- read_html("https://www.cnbc.com/quotes/?symbol=.DJI")
html_nodes(cnbc.news, "div.assets")
html_nodes(cnbc.news, "ul")
html_nodes(cnbc.news, "span")
html_nodes(cnbc.news, "span.")
html_nodes(cnbc.news, "a")
source('~/Dokumenty/inteligencja/projekt/forecast.R')
source('~/Dokumenty/inteligencja/projekt/nlp.R')
source('~/Dokumenty/inteligencja/projekt/nlp.R')
html_nodes(cnbc.news, "a")
#cnbc.news <- html_nodes(cnbc.news, "")
#cnbc.text <- html_text(cnbc.news)
#cnbc.text <- gsub(" ", "", gsub("latest", "", gsub("\n", "", cnbc.text)))
#
# marketwatch - https://www.marketwatch.com/investing/index/djia/news
mwatch.html <- read_html("https://www.marketwatch.com/investing/index/djia/news")
html_nodes(mwatch.html, "div.headlinewrapper")
html_nodes(mwatch.html, "div.headlinewrapper")[1]
html_nodes(mwatch.head, "a")
mwatch.head <- html_nodes(mwatch.html, "div.headlinewrapper")[1]
html_nodes(mwatch.head, "a")
source('~/Dokumenty/inteligencja/projekt/nlp.R')
mwatch.head
mwatch.head[1]
read_html(mwatch.head[1])
mwatch.head[1][1]
mwatch.head[11]
mwatch.head[1,]
mwatch.head[1]
class(mwatch.head)
class(mwatch.head[1])
bind_rows(lapply(xml_attrs(mwatch.head), function(x) data.frame(as.list(x), stringsAsFactors=FALSE))
)
bind_rows(lapply(xml_attrs(mwatch.head), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
library(dplyr)
bind_rows(lapply(xml_attrs(mwatch.head), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
mwatch.links <- bind_rows(lapply(xml_attrs(mwatch.head), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
View(mwatch.links)
mwatch.links[1]
class(mwatch.links)
mwatch.links[1,]
read_html(mwatch.links[1,])
read_html(paste("https://www.marketwatch.com", mwatch.links[1,]))
paste("https://www.marketwatch.com", mwatch.links[1,])
paste("https://www.marketwatch.com", mwatch.links[1,], sep="")
read_html(paste("https://www.marketwatch.com", mwatch.links[1,], sep=""))
mwatch.news <- read_html(paste("https://www.marketwatch.com", mwatch.links[1,], sep=""))
length(mwatch.links)
length(mwatch.links[1])
length(mwatch.links[1,])
length(mwatch.links[,1])
source('~/Dokumenty/inteligencja/projekt/nlp.R')
source('~/Dokumenty/inteligencja/projekt/nlp.R')
for(i in length(mwatch.links[,1])){
print(paste("https://www.marketwatch.com", mwatch.links[i,], sep=""))
#mwatch.news <- read_html(paste("https://www.marketwatch.com", mwatch.links[1,], sep=""))
}
source('~/Dokumenty/inteligencja/projekt/nlp.R')
mwatch.news <- read_html(paste("https://www.marketwatch.com", mwatch.links[1,], sep=""))
html_nodes(mwatch.news, "div.article-body")
html_nodes(mwatch.news, "article")
html_nodes(html_nodes(mwatch.news, "article"), "div.article-meat")
html_nodes(html_nodes(mwatch.news, "article"), "div")
html_nodes(html_nodes(mwatch.news, "article"), "div#article-body")
mwatch.article <- html_nodes(html_nodes(mwatch.news, "article"), "div#article-body")
html_text(mwatch.article)
gsub("\r", "", html_text(mwatch.article))
gsub("\n", "", gsub("\r", "", html_text(mwatch.article)))
mwatch.article <- gsub("\\s+", " ", gsub("\n", "", gsub("\r", "", html_text(mwatch.article))), str_trim(string))
mwatch.article <- gsub("\n", "", gsub("\r", "", html_text(mwatch.article)))
mwatch.article <- gsub("\\s+", " ", str_trim(mwatch.article))
library(stringr)
mwatch.article <- gsub("\\s+", " ", str_trim(mwatch.article))
mwatch.article
mwatch.articles <- list()
source('~/Dokumenty/inteligencja/projekt/nlp.R')
source('~/Dokumenty/inteligencja/projekt/nlp.R')
source('~/Dokumenty/inteligencja/projekt/nlp.R')
source('~/Dokumenty/inteligencja/projekt/nlp.R')
source('~/Dokumenty/inteligencja/projekt/nlp.R')
source('~/Dokumenty/inteligencja/projekt/nlp.R')
source('~/Dokumenty/inteligencja/projekt/nlp.R')
View(mwatch.articles)
mwatch.articles[[1]]
source('~/Dokumenty/inteligencja/projekt/nlp.R')
source('~/Dokumenty/inteligencja/projekt/nlp.R')
View(mwatch.articles)
mwatch.articles[[1]]
#
# cnbc - https://www.cnbc.com/quotes/?symbol=.DJI
cnbc.html <- read_html("https://www.cnbc.com/quotes/?symbol=.DJI")
#
# cnbc - https://www.cnbc.com/quotes/?symbol=.DJI
cnbc.html <- read_html("https://www.cnbc.com/quotes/?symbol=.DJI")
html_nodes(cnbc.html, "div#quote_latest_from_cnbc_summary_bucket")
html_nodes(cnbc.html, "div#quote-left-main")
html_nodes(cnbc.html, "div.quote-left-main")
html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div")
html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div#quote_latest_from_cnbc_summary_bucket")
html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.bucket")
html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.subsection assets   fade")
html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.subsection assets fade")
html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.subsection")
html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.headline")
cnbc.heads <- html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.headline")
cnbc.heads <- html_nodes(html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.headline"), "a")
View(cnbc.heads)
html_nodes(html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.headline"), "a")
html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.headline")
html_nodes(cnbc.html, "div.quote-left-main")
html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.bucket")
html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div#quote_latest_from_cnbc_summary_bucket")
html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.bucket")
html_nodes(html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.bucket"), "div#quote_latest_from_cnbc_summary_bucket")
html_nodes(html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.bucket"), "div")
html_nodes(html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.bucket"), "div")[4]
lol <- html_nodes(html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.bucket"), "div")[4]
View(lol)
xml_attrs(lol[[1]])
html_nodes(html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.bucket"), "div")
html_nodes(html_nodes(html_nodes(html_nodes(cnbc.html, "div.quote-left-main"), "div.bucket"), "div"), "a")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div a")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets a")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets div.assets")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets div")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a")
cnbc.heads <- gsub("\n", "", html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a"))
mwatch.heads <- html_nodes(html_nodes(mwatch.html, "div.headlinewrapper")[1], "a")
#
# marketwatch - https://www.marketwatch.com/investing/index/djia/news
mwatch.html <- read_html("https://www.marketwatch.com/investing/index/djia/news")
mwatch.heads <- html_nodes(html_nodes(mwatch.html, "div.headlinewrapper")[1], "a")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a")
View(mwatch.heads)
mwatch.links <- bind_rows(lapply(xml_attrs(mwatch.heads), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
View(mwatch.links)
cnbc.links <- bind_rows(lapply(xml_attrs(cnbc.heads), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
cnbc.heads <- html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a")
cnbc.links <- bind_rows(lapply(xml_attrs(cnbc.heads), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
View(cnbc.links)
cnbc.heads <- html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a href")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a.href")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a#href")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets href")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a href")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a")
View(mwatch.links)
View(cnbc.links)
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a target")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a")
html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a")[2:6]
cnbc.heads <- html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a")[2:6]
cnbc.links <- bind_rows(lapply(xml_attrs(cnbc.heads), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
View(cnbc.links)
length(mwatch.links[,1])
cnbc.links[1,]
cnbc.news <- cnbc.links[1,]
html_nodes(cnbc.news, "story-top")
cnbc.news <- read_html(cnbc.links[1,])
html_nodes(cnbc.news, "story-top")
html_nodes(cnbc.news, "div.story-top")
html_nodes(cnbc.news, "div.story-top h1")
html_nodes(cnbc.news, "div.story-top div#article_deck")
html_nodes(cnbc.news, "div.story-top div#article_deck span")
cnbc.abstracts <- list()
html_nodes(cnbc.news, "div.story-top div#article_deck span")
html_text(html_nodes(cnbc.news, "div.story-top div#article_deck span"))
html_text(html_nodes(cnbc.news, "div.story-top div#article_deck span"))[1]
cnbc.html <- read_html("https://www.cnbc.com/quotes/?symbol=.DJI")
cnbc.heads <- html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a")[2:6]
cnbc.links <- bind_rows(lapply(xml_attrs(cnbc.heads), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
cnbc.abstracts <- list()
for(i in 1:length(cnbc.links)){
cnbc.news <- read_html(cnbc.links[i,])
cnbc.abstracts <- c(cnbc.abstracts, html_text(html_nodes(cnbc.news, "div.story-top div#article_deck span")))
}
View(cnbc.abstracts)
# cnbc - https://www.cnbc.com/quotes/?symbol=.DJI
cnbc.html <- read_html("https://www.cnbc.com/quotes/?symbol=.DJI")
cnbc.heads <- html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a")[2:6]
cnbc.links <- bind_rows(lapply(xml_attrs(cnbc.heads), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
cnbc.abstracts <- list()
View(cnbc.links)
cnbc.news <- read_html(cnbc.links[1,])
cnbc.abstracts <- c(cnbc.abstracts, html_text(html_nodes(cnbc.news, "div.story-top div#article_deck span")))
cnbc.news <- read_html(cnbc.links[2,])
cnbc.abstracts <- c(cnbc.abstracts, html_text(html_nodes(cnbc.news, "div.story-top div#article_deck span")))
cnbc.news <- read_html(cnbc.links[3,])
cnbc.abstracts <- c(cnbc.abstracts, html_text(html_nodes(cnbc.news, "div.story-top div#article_deck span")))
View(cnbc.abstracts)
length(cnbc.links)
length(cnbc.links)[1,]
length(cnbc.links[1,])
length(cnbc.links[,1])
cnbc.html <- read_html("https://www.cnbc.com/quotes/?symbol=.DJI")
cnbc.heads <- html_nodes(cnbc.html, "div.quote-left-main div.bucket div.assets div.assets a")[2:6]
cnbc.links <- bind_rows(lapply(xml_attrs(cnbc.heads), function(x) data.frame(as.list(x), stringsAsFactors=FALSE)))
cnbc.abstracts <- list()
for(i in 1:length(cnbc.links[,1])){
cnbc.news <- read_html(cnbc.links[i,])
cnbc.abstracts <- c(cnbc.abstracts, html_text(html_nodes(cnbc.news, "div.story-top div#article_deck span")))
}
View(cnbc.abstracts)
source('~/Dokumenty/inteligencja/projekt/nlp.R')
View(cnbc.abstracts)
source('~/Dokumenty/inteligencja/projekt/nlp.R')
source('~/Dokumenty/inteligencja/projekt/nlp.R')
# investing.com - https://www.investing.com/indices/us-30-news
invest.html <- read_html("https://www.investing.com/indices/us-30-news")
source('~/Dokumenty/inteligencja/projekt/nlp.R')
html_nodes(invest.html, "div.mediumTitle1")
html_nodes(invest.html, "artilce")
html_nodes(invest.html, "article")
html_nodes(invest.html, "div.mediumTitle1")
html_nodes(invest.html, "div.mediumTitle1 a")
html_nodes(invest.html, "div.mediumTitle1 article a")
html_nodes(invest.html, "div.mediumTitle1 article.articleItem a")
html_nodes(invest.html, "div.mediumTitle1 article.articleItem a.mediumTitle1")
html_nodes(invest.html, "div.mediumTitle1 article.articleItem a.title")
source('~/Dokumenty/inteligencja/projekt/forecast.R')
View(dji.prices)
try(system("rm data/DJI.csv"))
View(dji.prices)
source('~/Dokumenty/inteligencja/projekt/forecast.R')
source('~/Dokumenty/inteligencja/projekt/forecast.R')
source('~/Dokumenty/inteligencja/projekt/forecast.R')
source('~/Dokumenty/inteligencja/projekt/nlp.R')
View(cnbc.news)
View(mwatch.links)
View(cnbc.abstracts)
source('~/Dokumenty/inteligencja/projekt/nlp.R')
View(mwatch.news)
source('~/Dokumenty/inteligencja/projekt/nlp.R')
View(cnbc.links)
View(cnbc.abstracts)
cnbc.abstracts[[1]]
cnbc.abstracts[[2]]
install.packages("SentimentAnalysis")
library(SentimentAnalysis)
cnbc.abstracts[1]
analyzeSentiment(cnbc.abstracts[1])
cnbc.abstracts[1,]
cnbc.abstracts[1]
cnbc.abstracts[,1]
cnbc.abstracts[2]
cnbc.abstracts[[1]
]
cnbc.abstracts[[1]]
analyzeSentiment(cnbc.abstracts[[1]])
analyzeSentiment(cnbc.abstracts[[2]])
analyzeSentiment(cnbc.abstracts[[2]])$PositivityGI
length(cnbc.abstracts)
analyzeSentiment(cnbc.abstracts)
source('~/Dokumenty/inteligencja/projekt/nlp.R')
cnbc.corpus <- Corpus(cnbc.abstracts)
cnbc.corpus <- VCorpus(cnbc.abstracts)
cnbc.corpus <- VCorpus(cnbc.abstracts), language = "en"))
cnbc.corpus <- VCorpus(cnbc.abstracts), language = "en")
cnbc.corpus <- VCorpus(cnbc.abstracts, language = "en")
cnbc.corpus <- VCorpus(cnbc.abstracts)
cnbc.abstracts[1,]
cnbc.abstracts[,1]
cnbc.abstracts[]
cnbc.abstracts[2]
cnbc.abstracts[[1]]
cnbc.abstracts[[2]]
cnbc.corpus <- VCorpus(cnbc.abstracts[[1]])
class(cnbc.abstracts)
class(mwatch.articles)
mwatch.corpus <- Vcorpus(mwatch.articles)
mwatch.corpus <- VCorpus(mwatch.articles)
mwatch.corpus <- VCorpus(VectorSource(mwatch.articles))
cnbc.corpus <- VCorpus(VectorSource(cnbc.abstracts))
cnbc.sent <- analyzeSentiment(cnbc.corpus)
cnbc.sent
mwatch.sent <- analyzeSentiment(mwatch.corpus)
mwatch.sent
mwatch.sent$PositivityGI
mean(mwatch.sent$PositivityGI)
mean(mwatch.sent$NegativityGI)
mean(cnbc.sent$PositivityGI)
mean(cnbc.sent$NegativityGI)
source('~/Dokumenty/inteligencja/projekt/nlp.R')
print("lol")
print("lol", quote="FALSE")
print("lol"[1], quote="FALSE")
print("lol"[[1]], quote="FALSE")
